name: "Python Poetry Action"
description: "An action to setup Poetry"
inputs:
  working-directory:
    description: "Working directory for the steps"
    required: false
  python-version:
    description: "Version of Python to use"
    required: true
  install-package:
    description: "Whether to install the package"
    required: false
    default: "true"
runs:
  using: "composite"
  steps:
    - name: Check working-directory if install-package is true
      run: |
        if [ "${{ inputs.install-package }}" = "true" ] && [ -z "${{ inputs.working-directory }}" ]; then
          echo "Error: working-directory must be provided if install-package is true."
          exit 1
        fi
      shell: bash
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
    - name: Update PATH for pipx
      shell: bash
      run: |
        echo "$PATH:/root/.local/bin" >> $GITHUB_PATH
    - name: Set up Poetry
      run: |
        pip install --user pipx
        pipx install poetry
      shell: bash
    - name: Get full Python version
      id: full-python-version
      shell: bash
      run:
        echo "full_version=$(python -c 'import sys; print(".".join(map(str,
        sys.version_info[:3])))')" >> $GITHUB_OUTPUT

    - name: Cache Poetry
      uses: actions/cache@v4
      with:
        path: ~/.cache/pypoetry
        key:
          ${{ runner.os }}-poetry-${{ hashFiles(format('{0}/poetry.lock',
          inputs.working-directory)) }}-${{
          steps.full-python-version.outputs.full_version }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Poetry Install
      if: ${{ inputs.install-package == 'true' }}
      run: |
        poetry install --no-interaction
      shell: bash
      working-directory: ${{ inputs.working-directory }}
