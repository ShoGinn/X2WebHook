name: Continuous Delivery of Python package

on:
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "**.md"
      - ".vscode/**"
      - ".idea/**"
  workflow_dispatch:
    inputs:
      production_release:
        description: "Production release?"
        required: true
        default: "true"

concurrency: release

permissions:
  contents: write
  packages: read

jobs:
  ci-check-python:
    name: Check Python
    uses: ./.github/workflows/check-python.yaml

  ci-build-python:
    name: Build Python
    uses: ./.github/workflows/build-python.yaml
    needs: ci-check-python

  release:
    name: Build Wheels as Artifacts and Create Releases
    needs: ci-build-python
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4
        with:
          # Fetch entire repository history so we can determine version number from it
          fetch-depth: 0

      - name: Set up Poetry
        uses: ./.github/actions/setup-poetry
        with:
          working-directory: .
          python-version: 3.11

      - name: Get branch name
        shell: bash
        run: echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
        id: get_branch

      - name: Set Git user as GitHub actions
        run: git config --global user.email "actions@github.com" && git config --global user.name "github-actions"

      - name: Create Continuous Deployment - Feature Branch
        if: steps.get_branch.outputs.branch != 'main' && inputs.production_release != 'true'
        run: |
          poetry run semantic-release \
            -v \
            version \
            --prerelease \
            --patch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY_USERNAME: __token__

      - name: Create Continuous Deployment - Production
        if: steps.get_branch.outputs.branch == 'main' && inputs.production_release == 'true'
        run: |
          poetry run semantic-release \
            -v \
            version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPOSITORY_USERNAME: __token__

      - name: Upload artifact
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4
        with:
          name: x2webhook
          path: dist/x2webhook*-py3-none-any.whl
          if-no-files-found: warn
